<persistence xmlns="http://java.sun.com/xml/ns/persistence"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://java.sun.com/xml/ns/persistence http://java.sun.com/xml/ns/persistence/persistence_1_0.xsd"
             version="1.0">
    <persistence-unit name="crm_PU">
        <!-- the specified datasource will be provided by the jpa-ds.xml file
             in WEB-INF that is part of the webapp component -->
        <jta-data-source>java:/crm_erp_DS</jta-data-source>
        <!-- Explizite Angabe von Klassen, die zur Persistence Unit gehoeren sollen,
            bzw. Angabe von jars, deren Klassen uebernommen werden sollen -->
        <!-- <jar-file>lib/somejar.jar</jar-file> -->
        <!-- <class>com.example.SomeClass</class> -->
        <!-- as we are using different PUs within a single deployment, we list the classes for each PU -->
        <class>org.dieschnittstelle.ess.entities.crm.AbstractTouchpoint</class>
        <class>org.dieschnittstelle.ess.entities.crm.Address</class>
        <class>org.dieschnittstelle.ess.entities.crm.Customer</class>
        <class>org.dieschnittstelle.ess.entities.crm.CustomerTransaction</class>
        <class>org.dieschnittstelle.ess.entities.crm.CustomerTransactionShoppingCartItem</class>
        <class>org.dieschnittstelle.ess.entities.crm.Location</class>
        <class>org.dieschnittstelle.ess.entities.crm.MobileTouchpoint</class>
        <class>org.dieschnittstelle.ess.entities.crm.StationaryTouchpoint</class>
        <properties>
            <!-- hibernate/wildfly automatic schema generation -->
            <property name="hibernate.hbm2ddl.auto" value="create-drop"/>
            <!-- openjpa/tomee automatic schema generation, see https://stackoverflow.com/questions/10677950/ddl-generation-and-general-persistence-xml-settings-openjpa, http://openjpa.apache.org/faq.html -->
            <!-- note that we need to use the action 'drop' rather than 'dropDB' because otherwise for each of the
                 the three schemata the complete db will be droped on schema creation... -->
            <property name="openjpa.jdbc.SynchronizeMappings"
                      value="buildSchema(foreignKeys=true,schemaAction='drop,add')"/>
            <property name="openjpa.jdbc.SchemaFactory"
                      value="native(foreignKeys=true)"/>
            <property name="openjpa.jdbc.MappingDefaults"
                      value="ForeignKeyDeleteAction=restrict, JoinForeignKeyDeleteAction=restrict"/>
        </properties>
    </persistence-unit>
</persistence>